Процедура УправлениеЭлементамиФормыПриЧтенииСозданииНаСервере(Форма) Экспорт

	ИмяОбъекта = "";
	Если Форма.Параметры.Свойство("Ключ") Тогда
		ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Форма.Параметры.Ключ));
		Если ОбъектМетаданных <> Неопределено Тогда
			ИмяОбъекта = ОбъектМетаданных.ПолноеИмя();
		КонецЕсли;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ИмяОбъекта) Тогда
		ВызватьИсключение НСтр("ru = 'Не удалось выполнить настройку полей формы'");
	КонецЕсли;

	НастройкиПолейФормы = ИнициализироватьНастройкиПолейФормы();
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяОбъекта);
	Менеджер.ЗаполнитьНастройкиПолейФормы(НастройкиПолейФормы);

	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "НастройкиПолей") Тогда
		Реквизиты = Новый Массив;
		Реквизиты.Добавить(Новый РеквизитФормы("НастройкиПолей", Новый ОписаниеТипов("ТаблицаЗначений")));
		Реквизиты.Добавить(Новый РеквизитФормы("Поля", Новый ОписаниеТипов(), "НастройкиПолей"));
		Реквизиты.Добавить(Новый РеквизитФормы("Условие", Новый ОписаниеТипов("ОтборКомпоновкиДанных"), "НастройкиПолей"));
		Реквизиты.Добавить(Новый РеквизитФормы("Свойства", Новый ОписаниеТипов(), "НастройкиПолей"));
		Форма.ИзменитьРеквизиты(Реквизиты);
	КонецЕсли;
	Форма.ЗначениеВРеквизитФормы(НастройкиПолейФормы, "НастройкиПолей");

	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ЗависимостиПолей") Тогда
		Реквизиты = Новый Массив;
		Реквизиты.Добавить(Новый РеквизитФормы("ЗависимостиПолей", Новый ОписаниеТипов("ТаблицаЗначений")));
		Реквизиты.Добавить(Новый РеквизитФормы("ИмяРеквизита", Новый ОписаниеТипов("Строка"), "ЗависимостиПолей"));
		Реквизиты.Добавить(Новый РеквизитФормы("ЗависимыеПоля", Новый ОписаниеТипов(), "ЗависимостиПолей"));
		Форма.ИзменитьРеквизиты(Реквизиты);
	КонецЕсли;
	ЗависимостиПолейФормы = ЗависимостиПолейФормы(НастройкиПолейФормы);
	Форма.ЗначениеВРеквизитФормы(ЗависимостиПолейФормы, "ЗависимостиПолей");

КонецПроцедуры

Функция ИнициализироватьНастройкиПолейФормы() Экспорт
	
	НастройкиПолейФормы = Новый ТаблицаЗначений;
	НастройкиПолейФормы.Колонки.Добавить("Поля", Новый ОписаниеТипов("Массив"));
	НастройкиПолейФормы.Колонки.Добавить("Условие", Новый ОписаниеТипов("ОтборКомпоновкиДанных"));
	НастройкиПолейФормы.Колонки.Добавить("Свойства", Новый ОписаниеТипов("Структура"));
	
	Возврат НастройкиПолейФормы;
	
КонецФункции

Функция ЗависимостиПолейФормы(НастройкиПолей) Экспорт
	
	ЗависимостиПолей = ИнициализироватьЗависимостиПолейФормы();
	
	Для каждого СтрокаНастройки Из НастройкиПолей Цикл
		
		Реквизиты = Новый Массив;
		ЗаполнитьРеквизитыПоОтбору(СтрокаНастройки.Условие, Реквизиты);
		
		Для каждого Реквизит Из Реквизиты Цикл
			ПозТочки = СтрНайти(Реквизит, ".");
			Если ПозТочки = 0 Тогда
				ИмяРеквизита = Реквизит;
			Иначе
				ИмяРеквизита = Сред(Реквизит, ПозТочки + 1);
			КонецЕсли;
			СтрокаТаблицы = ЗависимостиПолей.Найти(ИмяРеквизита, "ИмяРеквизита");
			Если СтрокаТаблицы = Неопределено Тогда
				СтрокаТаблицы = ЗависимостиПолей.Добавить();
				СтрокаТаблицы.ИмяРеквизита = ИмяРеквизита;
			КонецЕсли;
			Для каждого Поле Из СтрокаНастройки.Поля Цикл
				СтрокаТаблицы.ЗависимыеПоля.Добавить(Поле);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ЗависимостиПолей;
	
КонецФункции

Функция ИнициализироватьЗависимостиПолейФормы() Экспорт
	
	ЗависимостьПолейФормы = Новый ТаблицаЗначений;
	ЗависимостьПолейФормы.Колонки.Добавить("ИмяРеквизита", Новый ОписаниеТипов("Строка"));
	ЗависимостьПолейФормы.Колонки.Добавить("ЗависимыеПоля", Новый ОписаниеТипов("Массив"));
	
	Возврат ЗависимостьПолейФормы;
	
КонецФункции 

Процедура ЗаполнитьРеквизитыПоОтбору(Отбор, Реквизиты)
	
	Если Отбор = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Для каждого ЭлементОтбора Из Отбор.Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			Если Реквизиты.Найти(Строка(ЭлементОтбора.ЛевоеЗначение)) = Неопределено Тогда
				Реквизиты.Добавить(Строка(ЭлементОтбора.ЛевоеЗначение));
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			ЗаполнитьРеквизитыПоОтбору(ЭлементОтбора, Реквизиты);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

// Дабавляет реквизиты в массив непроверяемых, если свойства элемента не позволяют проверить реквизит
//
// Параметры:
//    СвойстваЭлементов - Массив - свойства элементов
//    МассивНепроверяемыхРеквизитов - Массив - непроверяемые реквизиты
Процедура ОтключитьПроверкуЗаполненияРеквизитовОбъекта(СвойстваЭлементов, МассивНепроверяемыхРеквизитов) Экспорт
	
	Для каждого СвойстваЭлемента Из СвойстваЭлементов Цикл
		Если ЗначениеЗаполнено(СвойстваЭлемента.ИмяЭлемента)
			И (СвойстваЭлемента.Свойство = "Видимость"
				Или СвойстваЭлемента.Свойство = "ТолькоПросмотр"
				Или СвойстваЭлемента.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного"
				Или СвойстваЭлемента.Свойство = "ОтметкаНезаполненного"
				Или СвойстваЭлемента.Свойство = "АвтоОтметкаНезаполненного") Тогда
			
			Если (СвойстваЭлемента.Свойство = "Видимость"
				Или СвойстваЭлемента.Свойство = "ОтметкаНезаполненного"
				Или СвойстваЭлемента.Свойство = "АвтоОтметкаНезаполненного")
					И СвойстваЭлемента.Значение = Ложь
				Или СвойстваЭлемента.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного"
					И СвойстваЭлемента.Значение = Истина
				Или СвойстваЭлемента.Свойство = "ТолькоПросмотр"
					И СвойстваЭлемента.Значение = Истина Тогда
					
				МассивНепроверяемыхРеквизитов.Добавить(СвойстваЭлемента.ИмяЭлемента);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

