// Производит настройку свойств элементов формы
// 
// Параметры:
//     Форма - ФормаКлиентскогоПриложения - Форма
//     ИзмененныйРеквизит - Строка - Реквизит, значение которого изменилось
//     ДополнительныеРеквизиты - Структура - Содержит имена и значения дополнительных реквизитов, принадлежащих форме
//
Процедура НастроитьЭлементыФормы(Форма, ИзмененныйРеквизит = "", ДополнительныеРеквизиты = Неопределено) Экспорт
	
	СвойстваЭлементовФормы = СвойстваЭлементовФормы(Форма.Объект, Форма.НастройкиПолей, Форма.ЗависимостиПолей, ИзмененныйРеквизит, ДополнительныеРеквизиты);
	
	Для каждого СвойстваЭлемента Из СвойстваЭлементовФормы Цикл
		
		Если Не ЗначениеЗаполнено(СвойстваЭлемента.ИмяЭлемента) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяЭлемента = ИмяЭлементаФормы(СвойстваЭлемента.ИмяЭлемента);
		
		Если СвойстваЭлемента.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного" Тогда
			Форма.Элементы[ИмяЭлемента].ТолькоПросмотр = СвойстваЭлемента.Значение;
			Форма.Элементы[ИмяЭлемента].АвтоОтметкаНезаполненного = Не СвойстваЭлемента.Значение;
		ИначеЕсли СвойстваЭлемента.Свойство = "ТолькоПросмотрБезОчистки" Тогда
			Форма.Элементы[ИмяЭлемента].ТолькоПросмотр = СвойстваЭлемента.Значение;
		ИначеЕсли СвойстваЭлемента.Свойство = "ВидимостьЭлемента" Тогда
			Форма.Элементы[ИмяЭлемента].Видимость = СвойстваЭлемента.Значение;
		Иначе
			Форма.Элементы[ИмяЭлемента][СвойстваЭлемента.Свойство] = СвойстваЭлемента.Значение;
		КонецЕсли;
		Если СвойстваЭлемента.Свойство = "АвтоОтметкаНезаполненного" И СвойстваЭлемента.Значение = Ложь
			Или СвойстваЭлемента.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного" И СвойстваЭлемента.Значение = Истина Тогда
			Форма.Элементы[ИмяЭлемента].ОтметкаНезаполненного = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Определяет свойства элементов формы по переданным настройкам
// 
// Параметры:
//     Объект - ДанныеФормыСтруктура - Объект формы
//     НастройкиПолей - см. ДенежныеСредстваСервер.ИнициализироватьНастройкиПолейФормы
//     ЗависимостиПолей - см. ДенежныеСредстваСервер.ИнициализироватьЗависимостиПолейФормы
//     ИзмененныйРеквизит - Строка - Имя измененного реквизита формы
//     ДополнительныеРеквизиты - Структура, Неопределено - структура дополнительных реквизитов
//
// Возвращаемое значение:
//  Массив из ПолеФормы - массив значений свойств для элементов формы
//
Функция СвойстваЭлементовФормы(Объект, НастройкиПолей, ЗависимостиПолей = Неопределено, ИзмененныйРеквизит = "", ДополнительныеРеквизиты = Неопределено) Экспорт
	
	СвойстваЭлементовФормы = Новый Массив;
	
	Если Не ЗначениеЗаполнено(ИзмененныйРеквизит) Или Не ЗначениеЗаполнено(ЗависимостиПолей) Тогда
		
		Для каждого ЭлементНастройки Из НастройкиПолей Цикл
			
			ЗначениеУсловия = Неопределено;
			
			Для каждого Поле Из ЭлементНастройки.Поля Цикл
				
				Если ЗначениеУсловия = Неопределено Тогда
					УсловияЭлементаНастройки = ЭлементНастройки["Условие"]; // ОтборКомпоновкиДанных
					ЗначениеУсловия = ЗначениеУсловия(УсловияЭлементаНастройки.Элементы, Объект,, ДополнительныеРеквизиты);
				КонецЕсли;
				
				Для каждого Свойство Из ЭлементНастройки.Свойства Цикл
					
					Если Свойство.Значение = Неопределено
						Или ТипЗнч(Свойство.Значение) = Тип("Булево") Тогда
						
						Если Свойство.Значение = Неопределено Тогда
							ЗначениеСвойства = ЗначениеУсловия;
						ИначеЕсли Свойство.Значение Тогда
							ЗначениеСвойства = ЗначениеУсловия;
						Иначе
							ЗначениеСвойства = Не ЗначениеУсловия;
						КонецЕсли;
						
						ДобавитьСвойствоПоляФормы(Поле, Свойство.Ключ, ЗначениеСвойства, СвойстваЭлементовФормы);
					Иначе
						Если Не ЗначениеЗаполнено(ЗначениеУсловия) Или ЗначениеУсловия Тогда
							ДобавитьСвойствоПоляФормы(Поле, Свойство.Ключ, Свойство.Значение, СвойстваЭлементовФормы);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		
		ЗависимыеПоля = Неопределено;
		
		ИзмененныеРеквизиты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИзмененныйРеквизит,,, Истина);
		
		Для каждого ЗначениеРеквизита Из ИзмененныеРеквизиты Цикл
			
			НайденныеСтроки = ЗависимостиПолей.НайтиСтроки(Новый Структура("ИмяРеквизита", ЗначениеРеквизита));
			Если НайденныеСтроки.Количество() Тогда
				ЗависимыеПоля = НайденныеСтроки[0].ЗависимыеПоля;
			КонецЕсли;
			
			Если ЗависимыеПоля <> Неопределено Тогда
				
				Для каждого ЭлементНастройки Из НастройкиПолей Цикл
					
					ЗначениеУсловия = Неопределено;
					
					Для каждого Поле Из ЭлементНастройки.Поля Цикл
						
						Если ЗависимыеПоля.Найти(Поле) = Неопределено Тогда
							Продолжить;
						КонецЕсли;
						
						Если ЗначениеУсловия = Неопределено Тогда
							УсловияЭлементаНастройки = ЭлементНастройки["Условие"]; // ОтборКомпоновкиДанных
							ЗначениеУсловия = ЗначениеУсловия(УсловияЭлементаНастройки.Элементы, Объект,, ДополнительныеРеквизиты);
						КонецЕсли;
						
						Для каждого Свойство Из ЭлементНастройки.Свойства Цикл
							
							Если Свойство.Значение = Неопределено
								Или ТипЗнч(Свойство.Значение) = Тип("Булево") Тогда
								
								Если Свойство.Значение = Неопределено Тогда
									ЗначениеСвойства = ЗначениеУсловия;
								ИначеЕсли Свойство.Значение Тогда
									ЗначениеСвойства = ЗначениеУсловия;
								Иначе
									ЗначениеСвойства = Не ЗначениеУсловия;
								КонецЕсли;
								
								ДобавитьСвойствоПоляФормы(Поле, Свойство.Ключ, ЗначениеСвойства, СвойстваЭлементовФормы);
							Иначе
								Если Не ЗначениеЗаполнено(ЗначениеУсловия) Или ЗначениеУсловия Тогда
									ДобавитьСвойствоПоляФормы(Поле, Свойство.Ключ, Свойство.Значение, СвойстваЭлементовФормы);
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат СвойстваЭлементовФормы;
	
КонецФункции 

#Область УправлениеИнтерфейснымиЭлементамиФормы

Процедура ДобавитьСвойствоПоляФормы(ИмяЭлемента, Свойство, Значение, СвойстваПолейФормы)
	
	НовоеСвойство = Новый Структура;
	НовоеСвойство.Вставить("ИмяЭлемента", ИмяЭлемента);
	НовоеСвойство.Вставить("Свойство", Свойство);
	НовоеСвойство.Вставить("Значение", Значение);
	
	СвойстваПолейФормы.Добавить(НовоеСвойство);
	
КонецПроцедуры

Функция ЗначениеУсловия(ЭлементыУсловия, Объект, ТипГруппы = Неопределено, ДополнительныеРеквизиты = Неопределено)
	
	Если ТипГруппы = Неопределено Тогда
		ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	КонецЕсли;
	
	Значение = Неопределено;
	
	Для каждого ЭлементУсловия Из ЭлементыУсловия Цикл
		Если ТипЗнч(ЭлементУсловия) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			Если ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ Тогда
				
				Если Значение = Неопределено Тогда
					Значение = Истина;
				КонецЕсли;
				Значение = Значение И ЗначениеУсловия(ЭлементУсловия.Элементы, Объект, ЭлементУсловия.ТипГруппы, ДополнительныеРеквизиты);
				
			ИначеЕсли ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли Тогда
				
				Если Значение = Неопределено Тогда
					Значение = Ложь;
				КонецЕсли;
				Значение = Значение Или ЗначениеУсловия(ЭлементУсловия.Элементы, Объект, ЭлементУсловия.ТипГруппы, ДополнительныеРеквизиты);
				
			ИначеЕсли ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе Тогда
				
				Значение = Не ЗначениеУсловия(ЭлементУсловия.Элементы, Объект, ЭлементУсловия.ТипГруппы, ДополнительныеРеквизиты);
				
			КонецЕсли;
		Иначе
			Если ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ Тогда
				
				Если Значение = Неопределено Тогда
					Значение = Истина;
				КонецЕсли;
				Значение = Значение И ЗначениеВыраженияУсловия(ЭлементУсловия, Объект, ДополнительныеРеквизиты);
				
			ИначеЕсли ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли Тогда
				
				Если Значение = Неопределено Тогда
					Значение = Ложь;
				КонецЕсли;
				Значение = Значение Или ЗначениеВыраженияУсловия(ЭлементУсловия, Объект, ДополнительныеРеквизиты);
				
			ИначеЕсли ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе Тогда
				
				Значение = Не ЗначениеВыраженияУсловия(ЭлементУсловия, Объект, ДополнительныеРеквизиты);
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Значение;
	
КонецФункции

Функция ЗначениеВыраженияУсловия(ЭлементУсловия, Объект, ДополнительныеРеквизиты)
	
	Значение = Ложь;
	
	ЛевоеЗначение = Неопределено;
	ПравоеЗначение = Неопределено;
	
	ИмяРеквизита = Строка(ЭлементУсловия.ЛевоеЗначение);
	Если ТипЗнч(ДополнительныеРеквизиты) = Тип("Структура") Тогда
		ПозицияТочки = СтрНайти(ИмяРеквизита, ".");
		Если ПозицияТочки <> 0 Тогда
			ДополнительныеРеквизиты.Свойство(Сред(ИмяРеквизита, ПозицияТочки + 1), ЛевоеЗначение);
		Иначе
			ЛевоеЗначение = Объект[ИмяРеквизита];
		КонецЕсли;
	Иначе
		ЛевоеЗначение = Объект[ИмяРеквизита];
	КонецЕсли;
	
	Если ТипЗнч(ЭлементУсловия.ПравоеЗначение) = Тип("ПолеКомпоновкиДанных") Тогда
		ИмяРеквизита = Строка(ЭлементУсловия.ПравоеЗначение);
		Если ТипЗнч(ДополнительныеРеквизиты) = Тип("Структура") Тогда
			ПозицияТочки = СтрНайти(ИмяРеквизита, ".");
			Если ПозицияТочки <> 0 Тогда
				ДополнительныеРеквизиты.Свойство(Сред(ИмяРеквизита, ПозицияТочки + 1), ПравоеЗначение);
			Иначе
				ПравоеЗначение = Объект[ИмяРеквизита];
			КонецЕсли;
		Иначе
			ПравоеЗначение = Объект[ИмяРеквизита];
		КонецЕсли;
	Иначе
		ПравоеЗначение = ЭлементУсловия.ПравоеЗначение;
	КонецЕсли;
	
	Если ЛевоеЗначение <> Неопределено Тогда
		Если ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			Значение = (ЛевоеЗначение = ПравоеЗначение);
		ИначеЕсли ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно Тогда
			Значение = (ЛевоеЗначение <> ПравоеЗначение);
		ИначеЕсли ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено Тогда
			Значение = ЗначениеЗаполнено(ЛевоеЗначение);
		ИначеЕсли ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено Тогда
			Значение = НЕ ЗначениеЗаполнено(ЛевоеЗначение);
		ИначеЕсли ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке И ТипЗнч(ПравоеЗначение) = Тип("Массив") Тогда
			Значение = (Не ПравоеЗначение.Найти(ЛевоеЗначение) = Неопределено);
		ИначеЕсли ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке И ТипЗнч(ПравоеЗначение) = Тип("СписокЗначений") Тогда
			Значение = (Не ПравоеЗначение.НайтиПоЗначению(ЛевоеЗначение) = Неопределено);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Функция ИмяЭлементаФормы(ИмяРеквизита)
	
	Если ИмяРеквизита = "РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств" Тогда
		Возврат "РасшифровкаПлатежаЗаявкаНаРасходованиеДенежныхСредств"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.Подразделение" Тогда
		Возврат "РасшифровкаПлатежаПодразделение"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.НаправлениеДеятельности" Тогда
		Возврат "РасшифровкаПлатежаНаправлениеДеятельности"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств" Тогда
		Возврат "РасшифровкаПлатежаСтатьяДвиженияДенежныхСредств"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.СуммаВзаиморасчетов" Тогда
		Возврат "РасшифровкаПлатежаСуммаВзаиморасчетов"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.ВалютаВзаиморасчетов" Тогда
		Возврат "РасшифровкаПлатежаВалютаВзаиморасчетов"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.КурсВзаиморасчетов" Тогда
		Возврат "РасшифровкаПлатежаКурсВзаиморасчетов"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.КурсВзаиморасчетовТекст" Тогда
		Возврат "РасшифровкаПлатежаКурсВзаиморасчетовТекст"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.СуммаНДС" Тогда
		Возврат "РасшифровкаПлатежаСуммаНДС"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.СтавкаНДС" Тогда
		Возврат "РасшифровкаПлатежаСтавкаНДС"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.ОбъектРасчетов" Тогда
		Возврат "РасшифровкаПлатежаОбъектРасчетов"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.Партнер" Тогда
		Возврат "РасшифровкаПлатежаПартнер"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.ДоговорКредитаДепозита" Тогда
		Возврат "РасшифровкаПлатежаДоговорКредитаДепозита"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.ТипСуммыКредитаДепозита" Тогда
		Возврат "РасшифровкаПлатежаТипСуммыКредитаДепозита"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.ДоговорЗаймаСотруднику" Тогда
		Возврат "РасшифровкаПлатежаДоговорЗаймаСотруднику"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.ДоговорАренды" Тогда
		Возврат "РасшифровкаПлатежаДоговорАренды"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.ТипПлатежаПоАренде" Тогда
		Возврат "РасшифровкаПлатежаТипПлатежаПоАренде"
	ИначеЕсли ИмяРеквизита = "РасшифровкаПлатежа.Организация" Тогда
		Возврат "РасшифровкаПлатежаОрганизация"
	Иначе
		Возврат СтрЗаменить(ИмяРеквизита, ".", "");
	КонецЕсли;
	
КонецФункции

#КонецОбласти 

